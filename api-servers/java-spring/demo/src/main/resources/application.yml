
# TODO: uncomment when ready

spring:

  application:
    name: demo

  server:
    port: 443
    ssl:
      key-store: keystore.p12
      key-store-password: springboot
      keyStoreType: PKCS12
      keyAlias: tomcat

  # Multiple Data-Source

  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: "jdbc:mysql://localhost:3306/[DATABASE_NAME]?autoreconnect=true"
    # JDBC URL Format
    # url: "jdbc:mysql://google/PRODUCTSERVICE?cloudSqlInstance=springboot-gcp- cloudsql:asia-northeast1:springboot-gcp-cloudsql- instance&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&passw ord=root"
    username: "root"
    password: "root"
    testOnBorrow: true
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 1
    max-active: 15
    max-idle: 10
    max-wait: 8000

  dbProductService:
    driverClassName: com.mysql.jdbc.Driver
    url: "jdbc:mysql://localhost:3306/PRODUCTSERVICE?autoreconnect=true"
    password: "root"
    username: "root"
    testOnBorrow: true
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 1
    max-active: 15
    max-idle: 10
    max-wait: 8000

  dbUserService:
    driverClassName: com.mysql.jdbc.Driver
    url: "jdbc:mysql://localhost:3306/USERSERVICE?autoreconnect=true"
    password: "root"
    username: "root"
    testOnBorrow: true
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 1
    max-active: 15
    max-idle: 10
    max-wait: 8000

  # OAuth2 Resource filter order

  security:
    oauth2:
      resource:
        filter-order: 3

  # Eureka Server

  eureka:
    client:
      registerWithEureka: false
      fetchRegistry: false
    # client: # TODO: Eureka Client (server can't be both simultaneously)
      serviceUrl:
        defaultZone: http://localhost:8761/eureka
      instance:
        preferIpAddress: true
  # server: # TODO: conflicts with 'server:port:443'
    port: 8761

  # Zuul Proxy (Edge) Server

  zuul:
    routes:
      products:
        path: /api/demo/**
        url: http://localhost:8080/
  # server: # TODO: conflicts with 'server:port:443'
    port: 8111

  # Enable Actuator (secured) endpoints - for monitoring & managing server

  management:
    security:
      enabled: false # disable security for actuator endpoints
    port: 9000 # to use separate port number for actuator endpoints (if required)

  # Admin Server - to monitor & manage Admin Clients

  boot:
    admin:
      url: http://localhost:9090/ # url for Admin Server UI - for managing Admin Server
